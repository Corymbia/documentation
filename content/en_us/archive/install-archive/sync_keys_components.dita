<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="sync_keys_components">
    <title>Sync Keys on Components</title>
	<shortdesc>After upgrading to <ph
		conref="../shared/conrefs.dita#prod/version"/>, synchronize keys on remote java
		components. This registers user services and sets the storage backend.</shortdesc>
    <taskbody>
        <context>
            <p>The new Object Storage Gateway (OSG) and WalrusBackend components (WS) have new keys. Those keys are generated and need to be synced to all java components after upgrade, in order for everyone to have the same key set.</p>
            
            <p>To sync keys on components after the CLC is started and the database is successfully
            	upgraded:</p>
        </context>
        <steps>
            <step>
                <cmd>Register User-Facing Services (UFS):</cmd>
                <info>
                    <codeblock>euca_conf --register-service -T user-api -H &lt;UFS HOST IP> -N API_&lt;last octet of HOST IP></codeblock>
                </info>
                <info>For example:<codeblock># euca_conf --register-service -T user-api -H 10.111.1.135 -N API_135</codeblock></info>
                <stepresult>
                    <p>Sample output:<codeblock>Created new partition 'API_135â€™...</codeblock>
                    </p>
                </stepresult>
            </step>
<!--            <step>
                <cmd>Set the object storage provider:</cmd>
                <info>
                    <codeblock># euca-modify-property -p objectstorage.providerclient=&lt;riakcs,walrus,s3></codeblock>
                </info>
                <info>For example:<codeblock>euca-modify-property -p objectstorage.providerclient=walrus</codeblock></info>
                <stepresult>
                	<p>Sample output:
                		<codeblock>PROPERTY        objectstorage.providerclient    walrus was {}</codeblock>
                    </p>
                </stepresult>
            </step>-->
            <step>
                <cmd>Verify that the <codeph>objectstorage.providerclient</codeph> property is set
                    correctly to <codeph>walrus</codeph>:</cmd>
                <info>
                    <codeblock>euca-describe-property -p objectstorage.providerclient</codeblock>
                </info>
                
                <stepresult>
                    <p>This should return output similar to the following:
                        <codeblock>PROPERTY objectstorage.providerclient walrus</codeblock>
                  </p>
                </stepresult>
            </step>
            <step>
                <cmd>Synchronize the keys:</cmd>
                <info>
                    <codeblock>euca_conf --sync-euca-p12</codeblock>
                </info>
                <stepresult>
                    <p>Sample output:<codeblock>Copying euca.p12 to 10.111.1.174...</codeblock>
                    </p>
                    <p><codeblock>Copying euca.p12 to 10.111.5.15...</codeblock>
                    </p>
                </stepresult>
            </step>
        	<step>
        		<cmd>Install the imaging worker file:</cmd>
        		<info>
        			<codeblock>yum install eucalyptus-service-image</codeblock>
        		</info>
        	</step>
        	<step>
                <cmd>Install the imaging worker image:</cmd>
                <info>
                    <codeblock>esi-install-image --install-default</codeblock>
                </info>
                <stepresult>
                    <p>Sample output:<codeblock>Installing default Imaging Service tarball...</codeblock>
                    </p>
                    <p>As the commands process, the final output shows each service is enabled, indicating the commands ran successfully.
                    </p>
                    
                </stepresult>
            </step>
        </steps>
    	<postreq>You are now ready to <xref href="./registering_services_upgrade.dita"/>.</postreq>
    </taskbody>
</task>
