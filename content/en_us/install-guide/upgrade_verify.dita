<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="upgrade_verify">
	<title>Verify the Services</title>
	<shortdesc>This topic describes how to verify all the services after upgrading.</shortdesc>
	<taskbody id="upgrade_verify_task">
		<context>
			<p>Verify that all <ph conref="../shared/conrefs.dita#prod/product"/> components are running and
				properly connected to one another. Check to make sure that the status of each
				service is enabled.</p>
			<p>To verify that all services are enabled:</p>
		</context>
		<steps>
			<step>
				<cmd>Verify the <ph conref="../shared/conrefs.dita#prod/product"/> versions. For
					example:</cmd>
				<info>
					<codeblock># euca-version
euca2ools <ph conref="../shared/conrefs.dita#prod/e2ools_prev_version"/>
eucalyptus <ph conref="../shared/conrefs.dita#prod/prev_version"/></codeblock>
				</info>
			</step>
			<step>
				<cmd>If you are using the Walrus backend for object storage, verify your Walrus
					backend service:</cmd>
				<info>
					<codeblock>euserv-describe-services --filter service-type=walrusbackend</codeblock>
				</info>
				<stepresult>
					<p><ph conref="../shared/conrefs.dita#prod/product"/> returns a result, as in the following
						example.</p>
					<codeblock>SERVICE walrusbackend walrus enabled</codeblock>
				</stepresult>
			</step>
			<step>
				<cmd>Verify your CCs:</cmd>
				<info>
					<codeblock>euserv-describe-services --filter service-type=cluster</codeblock>
				</info>
				<stepresult>
					<p><ph conref="../shared/conrefs.dita#prod/product"/> returns a list, as in the following
						example.</p>
					<codeblock>SERVICE cluster one one-cc enabled
SERVICE cluster two two-cc enabled</codeblock>
				</stepresult>
			</step>
			<step>
				<cmd>Verify your SCs:</cmd>
				<info>
					<codeblock>euserv-describe-services --filter service-type=storage</codeblock>
				</info>
				<stepresult>
					<p><ph conref="../shared/conrefs.dita#prod/product"/> returns a list, as in the following
						example.</p>
					<codeblock>SERVICE storage one one-sc enabled
SERVICE storage one one-sc enabled</codeblock>
				</stepresult>

			</step>
			<step>
				<cmd>Make sure that NCs are presenting available resources to the CC.</cmd>
				<info>
					<codeblock>euca-describe-availability-zones verbose</codeblock>
				</info>
				<stepresult>
					<p>The returned output should a non-zero number in the <codeph>free</codeph> and
							<codeph>max</codeph> columns, as in the following example.</p>
					<codeblock>AVAILABILITYZONE        test00  203.0.113.13
arn:euca:eucalyptus:test00:cluster:test00_cc/
AVAILABILITYZONE        |- vm types     free / max   cpu   ram  disk
AVAILABILITYZONE        |- m1.small     0004 / 0004   1    128     2
AVAILABILITYZONE        |- c1.medium    0004 / 0004   1    256     5
AVAILABILITYZONE        |- m1.large     0002 / 0002   2    512    10
AVAILABILITYZONE        |- m1.xlarge    0002 / 0002   2   1024    20
AVAILABILITYZONE        |- c1.xlarge    0001 / 0001   4   2048    20
AVAILABILITYZONE        test01  203.0.113.14
arn:euca:eucalyptus:test01:cluster:test01_cc/
AVAILABILITYZONE        |- vm types     free / max   cpu   ram  disk
AVAILABILITYZONE        |- m1.small     0004 / 0004   1    128     2
AVAILABILITYZONE        |- c1.medium    0004 / 0004   1    256     5
AVAILABILITYZONE        |- m1.large     0002 / 0002   2    512    10
AVAILABILITYZONE        |- m1.xlarge    0002 / 0002   2   1024    20
AVAILABILITYZONE        |- c1.xlarge    0001 / 0001   4   2048    20</codeblock>
				</stepresult>
			</step>
			
		</steps>
		<postreq>You are now ready to <xref href="upgrade_from_oldv.dita"/>.</postreq>
	</taskbody>
</task>
