<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="registering_walruses">
    <title>Register the Walrus Backend</title>
    <shortdesc>This topic describes how to register the Walrus Backend service with the Cloud
        Controller (CLC).</shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm>walrus <indexterm>registering</indexterm>
                </indexterm>
            </keywords>
        </metadata>
    </prolog>

    <taskbody>
        <!--    If there are no prereqs, state "None." -->        
        <prereq><b>Prerequisites</b><ul>
            <li>You must be using the Walrus Backend service as your object storage provider.</li>
            <li>The Cloud Controller must be properly installed and started.</li>
        </ul>
        </prereq>        
        <context><b>To register the Walrus Backend service with the <ph conref="../shared/conrefs.dita#prod/product"/> cloud</b>
        <note>This task is not necessary if you are using Riak CS instead of Walrus.</note>
        </context>
        <steps>
            <step>
                <cmd>On the CLC host machine, run the following command:</cmd>
                <info>
                    <codeblock>euserv-register-service -t walrusbackend -h IP SVCINSTANCE</codeblock>
                    <p>where:</p>
                    <ul>
                        <li><codeph>IP</codeph> is the IP of the Walrus Backend you are registering with this CLC.</li>
                        <li><codeph>SVCINSTANCE</codeph> must be a unique name for the Walrus
                            Backend service. We recommend that you use a short-hand name of the
                            hostname or IP address of the machine, for example:
                                <codeph>walrus-HOSTNAME</codeph> or
                                <codeph>walrus-IP_ADDRESS</codeph>.</li>
                    </ul>
                </info>
                <stepxmp>
                    <p>For example:</p>
                    <codeblock>euserv-register-service -t walrusbackend -h 10.111.5.182 walrus-10.111.5.182</codeblock>
                </stepxmp>
            </step>
            <step>
                <cmd>Copy the security credentials from the CLC to each machine running a Walrus Backend service. Run this command on the CLC host machine:</cmd>
                <info>
                    <codeblock>clcadmin-copy-keys HOST [HOST ...]</codeblock>
                </info>	
                <stepxmp>
                    <p>For example:</p>
                    <codeblock>clcadmin-copy-keys 10.111.5.182</codeblock>
                </stepxmp>
            </step>
            <!--    A simple verification can be just another step. Complex verifications, with multiple steps, should be a separate task.  -->   
            <step>
                <cmd>Verify that the Walrus Backend service is registered with the following command:</cmd>
                <info>
                    <codeblock>euserv-describe-services SVCINSTANCE</codeblock>
                </info>
            </step>			
        </steps>
        
        <!--    The result tells me what to expect at the end of this task, and where to go next. Use CAUTION if this task will be reused 
            in a different context. Only include where to go next (you'll add an xref) when this is always the flow. -->
        <result>
            <p>The registered Walrus Backend service is now ready for your cloud.</p>
            <!--<p>(Optional) Where to go next.</p>-->
        </result>
        
        <!--    If there are no postreqs, this section should be hidden. Don't expect many postreqs.
        <postreq><b>Postrequisites</b><ul>
            <li>A postereq.</li>
            <li>Another postreq.</li>                
        </ul>
        </postreq>         -->		        
        
    </taskbody>
</task>
