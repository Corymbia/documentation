<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="euwatch-get-stats">
	<title>euwatch-get-stats</title>
	<shortdesc>Gets time-series data for one or more statistics for a given
		metric.</shortdesc>
	<refbody>
		<section>
			<title>Syntax</title>
			<codeblock>euwatch-get-stats <b>MetricName</b>  --namespace  <b>value</b>
--statistics  <b>value</b>[,<b>value</b>...] [--dimensions  "<b>key1=value1</b>,
<b>key2=value2</b>..." ] [--end-time  <b>value</b> ] [--period  <b>value</b> ] 
[--start-time  <b>value</b> ] [--unit  <b>value</b> ] </codeblock>
		</section>
		<section>
			<title>Options</title>
			<table>
				<tgroup cols="3">
					<colspec colwidth="25*"/>
					<colspec colwidth="60*"/>
					<colspec colwidth="15*"/>
					<thead>
						<row>
							<entry>Option</entry>
							<entry>Description</entry>
							<entry>Required</entry>

						</row>
					</thead>
					<tbody>
						<row>
							<entry><codeph>MetricName</codeph></entry>
							<entry>Metric name that corresponds to the one contained in the gathered metric. You
								can also set this value using <codeph>--metric-name</codeph>.</entry>
							<entry align="center">Yes</entry>
						</row>
						<row>
							<entry><codeph>--dimensions "<i>key1=value1</i>,<i>key2=value2</i>..."</codeph></entry>
							<entry>Dimensions (one or more) along which the metric data was originally stored. If
								no dimensions are specified, then the statistics belonging to the specified
								non-dimensional metric will be returned. If you don't enter a value for dimensions,
								Eucalyptus assumes there are no dimensions.</entry>
							<entry align="center">No</entry>
						</row>
						<row>
							<entry><codeph>--end-time <i>value</i></codeph></entry>
							<entry>Timestamp of the last data point to return, inclusive. For example,
								2009-11-25T19:00:00+00:00. Timestamp will be rounded down to the nearest minute. The
								dateTime type uses ISO 8601. <p>Default: now</p></entry>
							<entry align="center">No</entry>
						</row>
						<row>
							<entry><codeph>-n, --namespace <i>value</i></codeph></entry>
							<entry>Namespace of the desired metric. This must match the namespace that was
								specified when the desired metric was initially reported.</entry>
							<entry align="center">Yes</entry>
						</row>
						<row>
							<entry><codeph>--period <i>value</i></codeph></entry>
							<entry>Granularity, in seconds, of the returned data points. Period must be at least
								60 seconds and must be a multiple of 60. <p>Default: 60</p> seconds.</entry>
							<entry align="center">No</entry>
						</row>
						<row>
							<entry><codeph>-s, --statistics <i>value1</i>,<i>value2</i>,<i>value3</i>...</codeph></entry>
							<entry>Statistics to be returned for the desired metric. <p>Valid values:
										<codeph>Average</codeph> | <codeph>Sum</codeph> | <codeph>Maximum</codeph> |
										<codeph>Minimum</codeph></p></entry>
							<entry align="center">Yes</entry>
						</row>
						<row>
							<entry><codeph>--start-time <i>value</i></codeph></entry>
							<entry>Timestamp of the first data point to return, inclusive. For example,
								2009-11-25T19:00:00+00:00. Timestamp will be rounded down to the nearest minute. The
								dateTime type uses ISO 8601. <p>Default: one hour in the past</p></entry>
							<entry align="center">No</entry>
						</row>
						<row>
							<entry><codeph>--unit <i>value</i></codeph></entry>
							<entry>Unit that the metric was reported in. <p>Valid values: <codeph>Seconds</codeph>
									| <codeph>Bytes</codeph> | <codeph>Bits</codeph> | <codeph>Percent</codeph> |
										<codeph>Count</codeph> | <codeph>Bytes/Second</codeph> |
										<codeph>Bits/Second</codeph> | <codeph>Count/Second</codeph> |
										<codeph>None</codeph></p></entry>
							<entry align="center">No</entry>
						</row>

					</tbody>
				</tgroup>
			</table>
		</section>

		<section conref="../shared/euwatch-common.dita#euwatch-common/euwatch_common_options"/>
		<section>
			<title>Output</title>
			<p>This command returns a table that contains the following:</p>
			<ul>
				<li>Time: Time the metrics were taken.</li>
				<li>SampleCount: The number of data points used to calculate this statistic</li>
				<li>Average: Average value</li>
				<li>Sum: Sum of values</li>
				<li>Minimum: Minimum observed value</li>
				<li>Maximum: Maximum observed value</li>
				<li>Unit: Unit of the metric</li>
			</ul>
		</section>

		<section>
			<title>Examples</title>
			<p>The follow example returns the average, minimum, and maximum CPU utilization for instance
				i-c07704a9, at one hour resolution.</p>
			<codeblock>euwatch-get-stats CPUUtilization --start-time 2013-02-14T23:00:00.000Z --end-time 2013-03-14T23:00:00.000Z --period 3600 --statistics "Average,Minimum,Maximum" --namespace "AWS/EC2" --dimensions "InstanceId=i-c07704a9"</codeblock>
			<p>The following example returns CPU utilization across your fleet.</p>
			<codeblock>euwatch-get-stats CPUUtilization --start-time 2013-02-14T23:00:00.000Z --end-time
2013-03-14T23:00:00.000Z --period 3600 --statistics "Average,Minimum,Maximum" --namespace "AWS/EC2"</codeblock>
			<p>The following example returns the average, minimum, and maximum request count made to the dev stack
				of TestService for a particular user, at one hour resolution.</p>
			<codeblock>euwatch-get-stats RequestCount --start-time 2012-11-24T23:00:00.000Z --end-time
2012-11-25T23:00:00.000Z --period 3600 --statistics "Average,Minimum,Maximum" --namespace
"TestService" --dimensions "User=SomeUser,Stack=dev"</codeblock>
			<p>The following example shows RequestCount statistics across all of "TestService".</p>
			<codeblock>euwatch-get-stats RequestCount --start-time 2012-11-24T23:00:00.000Z --end-time
2012-11-25T23:00:00.000Z --period 3600 --statistics "Average,Minimum,Maximum,SampleCount"
--namespace "TestService"</codeblock>
			<p>The following shows sample output for this command.</p>
			<codeblock>Time                 Samples  Average  Unit   
2013-05-19 00:03:00  2.0      0.19     Percent
2013-05-19 00:04:00  2.0      0        Percent
2013-05-19 00:05:00  2.0      0        Percent
2013-05-19 00:06:00  2.0      0        Percent
2013-05-19 00:07:00  2.0      0        Percent
2013-05-19 00:08:00  2.0      0        Percent
2013-05-19 00:09:00  2.0      0        Percent
2013-05-19 00:10:00  2.0      0        Percent
2013-05-19 00:11:00  2.0      0        Percent
2013-05-19 00:12:00  2.0      0.195    Percent
2013-05-19 00:13:00  2.0      0.215    Percent</codeblock>
		</section>

	</refbody>
</reference>
