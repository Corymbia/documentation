<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="ts_logs">
	<title>Eucalyptus Log Files</title>
	<shortdesc>Usually when an issue arises in Eucalyptus, you can find information that points to the
		nature of the problem either in the Eucalyptus log files or in the system log files. This topic
		details log file message meanings, location, configuration, and fault log
		information.</shortdesc>
	<prolog>
		<metadata>
			<keywords>
				<indexterm>troubleshooting <indexterm>log files</indexterm>
				</indexterm>
			</keywords>
		</metadata>
	</prolog>

<concept id="log_file_location_content">
	<title>Log File Location and Content</title>
	<shortdesc>By default, the Eucalyptus log files are stored in
		<filepath>/var/log/eucalyptus/</filepath> on each machine that hosts a Eucalyptus
		component. If Eucalyptus is installed somewhere other than the filesystem root
		(<filepath>/</filepath>), log files are stored in
		<filepath>$EUCALYPTUS/var/log/eucalyptus/</filepath>. </shortdesc>
	<conbody>
			<section>
				<title>CLC, Walrus, SC, and UFS Log Files</title>
				<p>Cloud controller (CLC), Walrus, Storage controller (SC), and User-Facing Services (UFS) log
					files are as follows:</p>
			<table>
				<tgroup cols="2">
					<thead>
						<row>
							<entry>Log File</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><filepath>cloud-cluster.log</filepath></entry>
							<entry>This log contains information about your clusters as the CLC sees things: 
								current status, current capacity, and any problems. These logs can help you detect 
								if there is a capacity or communication issue associated with your clusters.</entry>
						</row>
						<row>
							<entry><filepath>eucanetd.log</filepath></entry>
							<entry>This log contains information about network health for network artifacts managed by
									eucanetd and running on the CLC (only in VPCMIDO mode).</entry>
						</row>
						<row>
							<entry><filepath>cloud-fault.log</filepath></entry>
							<entry>This file is reserved for issues with known error codes and known resolutions.</entry>
						</row>
						<row>
							<entry><filepath>cloud-output.log</filepath></entry>
							<entry>This file contains all info-level logs for the Java
								component itself. If there are multiple Java components on a single host (for example, CLC and
								Walrus), the info-level logs for all of the components will go here. </entry>
						</row>
						<row>
							<entry><filepath>cloud-debug.log</filepath></entry>
							<entry>This file contains all messages generated from debug-level logging.</entry>
						</row>
						<row>
							<entry><filepath>cloud-error.log</filepath></entry>
							<entry>This file contains is enabled by default alongside
								info. Along with <filepath>cloud-output.log</filepath>, the
								<filepath>cloud-error.log</filepath> is one of the first places you should look.</entry>
						</row>
						<row>
							<entry><filepath>cloud-exhaust.log</filepath></entry>
							<entry>This file contains errors and warnings.</entry>
						</row>
						<row>
							<entry><filepath>cloud-extreme.log</filepath></entry>
							<entry>This is legitimately a setting for developers only, because production usage would fill up the hard drive with log files very quickly.</entry>
						</row>
						<row>
							<entry><filepath>startup.log</filepath></entry>
							<entry><p><i>For Eucalyptus deployments on RHEL / CentOS 6:</i></p> 
									<p>STDOUT and STDERR are redirected to this log file for system startup. This file contains
										system JVM startup output including system bootstrap
										information, component bootstrap configuration, local
										service discovery, and network interfaces. (As of Eucalyptus
										4.3, this log info goes to <filepath>/var/log/messages</filepath>.</p></entry>
						</row>
						<row>
							<entry><filepath>upgrade.log</filepath></entry>
							<entry>This file records the output from upgrade process. Same as seen on the command line when upgrading.</entry>
						</row>
						<row>
							<entry><filepath>cloud-requests.log</filepath></entry>
							<entry>This file is only located on the UFS component and 
								logs the system requests made to the different services: ec2, autoscaling, cloudformation, etc. </entry>
						</row>
						<row>
							<entry><filepath>/var/log/messages</filepath></entry>
							<entry><p>This file contains any general host problems. For
								example: networking issues, disk space, hardware failures.</p>
								<p><i>For Eucalyptus deployments on RHEL / CentOS 7:</i></p>
								<p>Also includes STDOUT and STDERR for system startup. This file contains system JVM startup
										output including system bootstrap information, component
										bootstrap configuration, local service discovery, and
										network interfaces.</p>
							</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			</section>
		<section>
			<title>CC Log Files</title>
			<p>For the Cluster controller (CC), the general types of errors to look for are errors with node
					orchestration, communication issues between CC and NCs, and tunneling issues
					with multi-cluster configurations (to span security groups across AZs). Log
					files are as follows:</p>
			<table>
				<tgroup cols="2">
					<thead>
						<row>
							<entry>Log File</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><filepath>cc.log</filepath></entry>
							<entry>This is the canonical place for CC error messages, and is the
								common log for all info and warning messages as well. In the C code, we mostly follow syslog
								practices. You can change the CC logging level on the fly with a restart. Log messages tend to be readable and informative.</entry>
						</row>
						<row>
							<entry><filepath>eucanetd.log</filepath></entry>
							<entry>This log contains information about network health for network artifacts (iptables,
									ipsets, ebtables, dhcpd) managed by eucanetd and running on the
									CC (only in MANAGED modes).</entry>
						</row>
						<row>
							<entry><filepath>cc-fault.log</filepath></entry>
							<entry>This file contains issues with known error codes and known resolutions.</entry>
						</row>
						<row>
							<entry><filepath>axis2c.log</filepath></entry>
							<entry>This file is for the web services stack on the CC. Web
								services calls get translated here. It is not too "user-friendly" for parsing, but you normally
								do not need to go through it. Most issues appearing in this file have to do with credential
								errors or OpenSSL issues.</entry>
						</row>
						<row>
							<entry><filepath>httpd-cc_error_log</filepath></entry>
							<entry>This file generally contains information about
								events around the web services stack. For example: component start or stop, IP tables, or
								networking errors.</entry>
						</row>
						<row>
							<entry><filepath>/var/log/messages</filepath></entry>
							<entry>This file contains DHCP bridge issues and general
								network-related issues.</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		</section>
		<section>
			<title>NC Log Files</title>
			<p>For the Node controller (NC) log files generally detail instance tasks, instance lifecycle,
					and instance operations. NC log files are as follows:</p>
			<table>
				<tgroup cols="2">
					<thead>
						<row>
							<entry>Log File</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><filepath>nc.log</filepath></entry>
							<entry>This file is the common file for all info, error, and warning messages. It is a good starting place for all issues on an NC.</entry>
						</row>
						<row>
							<entry><filepath>eucanetd.log</filepath></entry>
							<entry>This log contains information about network health for network artifacts (iptables,
									ipsets, ebtables, dhcpd) managed by euncanetd and running on the
									NC (in EDGE and MANAGED modes).</entry>
						</row>
						<row>
							<entry><filepath>axis2c.log</filepath></entry>
							<entry>This file is for the web services stack on the NC. Web
								services calls get translated here. It is not too "user-friendly" for parsing, but you normally
								do not need to go through it. Most issues appearing in this file have to do with credential
								errors or OpenSSL issues.</entry>
						</row>
						<row>
							<entry><filepath>httpd-nc_error_log</filepath></entry>
							<entry>This file generally contains information about
								events around the web services stack. For example: component start or stop, IP tables, or
								networking errors.</entry>
						</row>
						<row>
							<entry><filepath>nc-fault.log</filepath></entry>
							<entry>This file contains issues that have known error codes and known resolutions. </entry>
						</row>
						<row>
							<entry><filepath>euca_test_nc.log</filepath></entry>
							<entry>When the NC starts up, it runs through a self-test. This file contains log message
								from that process. It is useful to review if you have a fresh NC and you’re seeing issues.
							</entry>
						</row>
						<row>
							<entry><filepath>/var/log/messages</filepath></entry>
							<entry>This file contains high-level KVM, libvirt, and general hypervisor issues. It also
								contains iSCSI/EBS issues (usually connecting instances to storage), and networking issues
								in certain Eucalyptus networking modes (most useful in Edge, Managed, and Managed-NoVLAN).
							</entry>
						</row>
						<row>
							<entry><filepath>/var/log/libvirt/*</filepath></entry>
							<entry>Various low-level libvirt errors and low-level QEMU and KVM errors.
							</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			
		</section>
		<section>
			<title>API Services Running As Instances</title>
			<p>The following log files are relevant to cloud administrators who have access to instances
					directly:</p>
			<table>
				<tgroup cols="2">
					<thead>
						<row>
							<entry>Log File</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><filepath>worker.log</filepath></entry>
							<entry>Logs on the Image Worker image are stored in <filepath>/var/log/eucalyptus-imaging-worker.</filepath></entry>
						</row>
						<row>
							<entry><filepath>servo.log</filepath></entry>
							<entry>Logs on a given Elastic Load Balancer (ELB) are stored in <filepath>/var/log/load-balancer-servo.</filepath></entry>
						</row>						
						
					</tbody>
				</tgroup>
			</table>
			
		</section>
		
		<section>
			<title>System Log Files</title>
			<p>You might also find helpful information about the nature of an issue in the system logs. In
				particular, the following logs may be relevant:</p>
			<ul>
				<li><filepath>/var/log/messages</filepath></li>
				<li><filepath>/var/log/libvirt/</filepath></li>
			</ul>
		
			
		</section>
		<section>
			<title>Log File Levels</title>
			<p>All messages that show up as <codeph>FAULT</codeph>, <codeph>FATAL</codeph>, or
				<codeph>ERROR</codeph> require an action by the administrator. </p>
			<dl>
				<dlentry>
					<dt>FAULT</dt>
					<dd>Anything identified in a fault log has an identifiable cause and an identifiable
						solution, but one that Eucalyptus cannot fix by itself. The administrator needs to act
						immediately.</dd>
				</dlentry>
				
				<dlentry>
					<dt>FATAL</dt>
					<dd>Any condition that indicates that Eucalyptus has failed (for example, OOM).</dd>
				</dlentry>
				
				<dlentry>
					<dt>ERROR</dt>
					<dd>Any condition for which an operator must take immediate action to
						identify and/or remedy.</dd>
				</dlentry>
				
				<dlentry>
					<dt>WARN</dt>
					<dd>An indication that the system could not perform a task, but does not necessarily
						indicate that immediate action by the operator is required. For example, when a user
						tries to allocate a bucket when their quota is exceeded, or when an action is being
						retried unsuccessfully, with the final timeout possibly giving ERROR instead of
						WARN.</dd>
				</dlentry>
				
				<dlentry>
					<dt>INFO</dt>
					<dd>This is the default recommended log level. Any log message that contains useful information to see
						“what is happening” and generally indicates healthy activity. For example, 
						anytime a user runs <codeph>euca-describe-instances</codeph> (that is, User A does Action B at
						Time T with Correlation-id I, and it succeeded or failed--grep for Correlation-id I in various logs for
						more info). This is useful for troubleshooting, but not necessarily for monitoring.</dd>
				</dlentry>
				
				<dlentry>
					<dt>DEBUG</dt>
					<dd>Detailed debug data is only available when the cloud is set to debug mode, and unlike
						INFO, it does not seek to aggregate messages. Instead, it writes them out the second they’re
						generated. For example, entering or leaving a particular function. These messages are generally incomprehensible to
						administrators, but are useful to Eucalyptus engineers for debugging.</dd>
				</dlentry>
				
				<dlentry>
					<dt>TRACE (backend) or EXTREME (frontend)</dt>
					<dd>These are useful for engineers only in development. Unlike DEBUG,
						installations running in TRACE or EXTREME mode can actually degrade the system as a
						result of the monitoring activity, and could actually create failures. We recommend that you
						don't </dd>
				</dlentry>
			</dl>
		</section>
		<section>
			<title>Log File Configuration</title>
			<p>For the CC and the NC, you can configure the log level using the <codeph>LOGLEVEL</codeph>
				parameter in <filepath>eucalyptus.conf</filepath>. This parameter will be picked up
				dynamically when the value is changed in the config file, without requiring a restart of the
				component.</p>
			<p>For all other components, you can configure the log level by passing an appropriate
					<codeph>--log-level</codeph> argument in the init script. You can also dynamically change
				the level using <codeph>euctl-modify-property</codeph> and set an appropriate value for
					<codeph>cloud.euca_log_level</codeph>. This takes precedence over the value specified in
				the init script.</p>
			<p>Valid log levels are as follows, from most to least verbose:</p>
			<ul>
				<li>ALL</li>
				<li>EXTREME</li>
				<li>TRACE</li>
				<li>DEBUG</li>
				<li>INFO</li>
				<li>WARN</li>
				<li>ERROR</li>
				<li>FATAL</li>
				<li>OFF</li>
			</ul>
			<p>If no value is specified, the default <codeph>INFO</codeph> is used.</p>
		</section>
		<section>
			<title>Log File Format</title>
			<p>Eucalyptus logs now have a standard format, which varies slightly per log level.</p>
			<p>For log levels FATAL, ERROR, WARN and INFO:</p>
			<codeblock>YYYY-MM-DD HH:MM:SS LEVEL | message </codeblock>
			<p>For log levels DEBUG and TRACE:</p>
			<codeblock>YYYY-MM-DD HH:MM:SS LEVEL PROCESS:THREAD loggingMethodOrClass     | message </codeblock>
			<p>For log level EXTREME and ALL:</p>
			<codeblock>YYYY-MM-DD HH:MM:SS LEVEL PROCESS:THREAD loggingMethodOrClass   FILENAME:LineNumber | message </codeblock>
		</section>
		<section>
			<title>Fault Logs</title>
			<p>Eucalyptus includes fault logs for easy identification of conditions outside of
				Eucalyptus's control that may cause it to fail. These messages are logged per component, and
				each fault is logged only once per component, in
					<filepath>/var/log/eucalyptus/[component]-fault.log</filepath>. The messages include a
				suggested resolution, and can be customized. Where they have been translated, Eucalyptus
				will use the system-configured <codeph>LOCALE</codeph> variable to serve appropriate
				messages.</p>
			<p>Fault messages are based on XML-formatted templates, stored in a per-locale directory
				structure, with one file per fault message, and one file storing common strings. Default
				templates are shipped with Eucalyptus. These are stored in
					<filepath>/usr/share/eucalyptus/faults/</filepath> as follows:</p>
			<codeblock>/usr/share/eucalyptus/faults/en_US/0001.xml
...
/usr/share/eucalyptus/faults/en_US/1234.xml
/usr/share/eucalyptus/faults/en_US/common.xml
</codeblock>
		</section>
		<section>
			<title>Using Localized Fault Logs</title>
			<p>Localized messages are located in a per-locale directory under
					<filepath>/usr/share/eucalyptus/faults/</filepath>. If localized messages are available
				matching the system LOCALE, Eucalyptus will use those messages. If no LOCALE is set,
				Eucalyptus defaults to <codeph>en_US</codeph>.</p>
			<p>Set the system LOCALE in <filepath>/etc/sysconfig/i18n</filepath> as follows:</p>
			<codeblock>LOCALE=ru_RU</codeblock>
		</section>
		<section>
			<title>Using Customized Fault Logs</title>
			<p>To use your own customized messages, copy the message files to the appropriate directory
				under <filepath>/etc/eucalyptus/faults/</filepath> and edit them. Do not change the
				filenames. To test the fault template, run <codeph>euca-generate-fault</codeph>, providing
				the component name, fault ID, and any relevant parameters along with their values.</p>
			<codeblock>euca-generate-fault -c component_name fault_id [param] [value]</codeblock>
			<p>For example</p>
			<codeblock>euca-generate-fault -c nc 1008 daemon ntpd</codeblock>
			<p>The test fault should be logged in the appropriate component fault log (in this case,
						<filepath>/var/log/eucalyptus/nc-fault.log</filepath></p>
			<p>Eucalyptus uses customized messages where they are available, preferring a non-localized
				custom message over a localized default message. Localized messages should be in a
				per-locale directory under <filepath>/etc/eucalyptus/faults/</filepath>, with a directory
				name that matches the system LOCALE. If no LOCALE is set, Eucalyptus defaults to
					<codeph>en_US</codeph>.</p>
		</section>
	</conbody>
</concept>
</concept>
