<?xml version="1.0" encoding="UTF-8"?>
<!--This work by Eucalyptus Systems is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. See the accompanying LICENSE file for more information.-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="instances_concepts">
 <title>Instance Concepts</title>
 <shortdesc>This section describes conceptual information to help you understand
		instances.</shortdesc>
 <conbody>
  <section>
  	<title>Eucalyptus Machine Image (EMI)</title>
  	<p>A Eucalyptus machine image (EMI) is a copy of a virtual machine bootable file system stored in
  		the Walrus storage. An EMI is a template from
  		you can use to deploy multiple identical instances&#8212;or copies of the virtual machine.</p>
  	<p>EMIs are analogous to Amazon Machine Images (AMIs) in AWS. In fact, you can download and
  		deploy any of the 10,000+ AMIs as EMIs in a Eucalyptus cloud without significant
  		modification. While it is possible to build your own EMI, it is might be just as
  		simple to find a thoroughly vetted, freely available image in AWS, download it to your
  		Eucalyptus cloud, and use that instead.</p>
  	<p>EMIs can be Linux or Windows-based. In Linux it is an image of the <filepath>/</filepath> file
  		system while in Windows it is an image of the C: drive. </p>
  	<p>When registered in a Eucalyptus cloud, each distinct EMI is given a unique ID for
  		identification.  The ID is in the format emi-&lt;nnnnnnnn>. </p>
  	<p/>
  	<image href="images/Eucalyptus-Machine-Images.png" placement="break" id="image_ntt_k3w_df"
  		scale="60" alt="Diagram of Linux and Windows drives in relation to an EMI"/>
  </section>
 	<section>
 		<title>Instance</title>
 		<p>A instance is a virtual machine deployed from an EMI. An instance then, is simply a
 			running copy of an EMI, which means it always starts from a known baseline. There are two types
 			of instances; instance store-backed and EBS-backed. This section describes store-backed
 			instances. For information about EBS-backed instances, see <xref
 				href="../shared/using_block_storage.dita"/>.</p>
 		<p/>
 		<p>
 			<image href="images/Instances-illustration.png" placement="break" id="image_pzc_15v_f3"
 				scale="60"/>
 		</p>
 		<p/>
 		<p>Every instance receives a unique ID in the format i-&lt;nnnnnnnn>.</p>
 		<p>You can deploy multiple instances using a single command. In this case all the instances will
				have unique instance IDs but will share a common reservation ID. This reservation ID
				can be seen, for example, from the euca2ools
					<cmdname>euca-describe-instances</cmdname> command that lists running instances.
				Reservations IDs appear in the format r-&lt;nnnnnnnn>.</p>
 		<note type="tip">A <i>reservation</i> is an EC2 term used to describe the resources reserved for one or more
 			instances launched in the cloud. </note>
 	</section>
 	<section>
 		<title>Persistence</title>
 		<p>Applications running in ephemeral instances that generate data that must be saved should write
				that data to some place other than the instance itself. There are two Eucalyptus
				options available. First, the data can be written to a volume that is attached to
				the instance. Volumes provided by the Storage Controller and attached to instances
				are persistent. Second, the data could be written to the Walrus using HTTP put/get
				operations. Walrus storage is also persistent.</p>
 		<p/>
 		<p>
 			<image href="images/Persistence-in-Ephemeral-Instances.png" placement="break"
 				id="image_23f_l3z_1h" scale="60"/>
 		</p>
 		<p/>
 		<p>If the application cannot be rewritten to send data to a volume or the Walrus, then the
 			application should be deployed inside an EBS-backed instance. EBS-backed instances are persistent
 			and operate in a manner more similar to a physical machine.</p>
 	</section>
 </conbody>
</concept>
